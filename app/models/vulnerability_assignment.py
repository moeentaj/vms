from sqlalchemy import Column, Integer, String, DateTime, Text, ForeignKey, Enum
from sqlalchemy.sql import func
from sqlalchemy.orm import relationship
from app.core.database import Base
import enum

class AssignmentStatus(enum.Enum):
    ASSIGNED = "assigned"
    IN_PROGRESS = "in_progress"
    UNDER_REVIEW = "under_review"
    COMPLETED = "completed"
    CLOSED = "closed"

class AssignmentPriority(enum.Enum):
    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"
    CRITICAL = "critical"
    URGENT = "urgent"

class VulnerabilityAssignment(Base):
    __tablename__ = "vulnerability_assignments"
    
    id = Column(Integer, primary_key=True, index=True)
    
    # Foreign keys
    cve_id = Column(String(20), ForeignKey("cves.cve_id"), nullable=False)
    asset_id = Column(Integer, ForeignKey("assets.id"), nullable=True)
    assignee_id = Column(Integer, ForeignKey("users.id"), nullable=False)
    assigned_by_id = Column(Integer, ForeignKey("users.id"), nullable=False)
    
    # Assignment details
    title = Column(String(255), nullable=False)
    description = Column(Text, nullable=True)
    status = Column(Enum(AssignmentStatus), default=AssignmentStatus.ASSIGNED)
    priority = Column(Enum(AssignmentPriority), default=AssignmentPriority.MEDIUM)
    
    # Dates
    due_date = Column(DateTime, nullable=True)
    assigned_at = Column(DateTime, server_default=func.now())
    started_at = Column(DateTime, nullable=True)
    completed_at = Column(DateTime, nullable=True)
    
    # Progress tracking
    progress_notes = Column(Text, nullable=True)
    resolution_summary = Column(Text, nullable=True)
    
    # Metadata
    created_at = Column(DateTime, server_default=func.now())
    updated_at = Column(DateTime, server_default=func.now(), onupdate=func.now())
    
    # Relationships
    cve = relationship("CVE")
    asset = relationship("Asset")
    assignee = relationship("User", foreign_keys=[assignee_id], back_populates="assigned_vulnerabilities")
    assigned_by = relationship("User", foreign_keys=[assigned_by_id], back_populates="created_assignments")