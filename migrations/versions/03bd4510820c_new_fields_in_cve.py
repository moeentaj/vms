"""New Fields in CVE

Revision ID: 03bd4510820c
Revises: 2787fc3cbbac
Create Date: 2025-08-21 19:57:43.551601

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '03bd4510820c'
down_revision: Union[str, None] = '2787fc3cbbac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_assets_id'), 'assets', ['id'], unique=False)
    op.add_column('cves', sa.Column('detection_methods', sa.Text(), nullable=True))
    op.add_column('cves', sa.Column('upgrade_paths', sa.Text(), nullable=True))
    op.execute('ALTER TABLE cves DROP CONSTRAINT IF EXISTS cves_cve_id_key CASCADE')    
    op.create_index(op.f('ix_cves_cve_id'), 'cves', ['cve_id'], unique=True)
    op.create_index(op.f('ix_cves_id'), 'cves', ['id'], unique=False)
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.alter_column('vulnerability_assignments', 'cve_id',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    
    # Create enum types with error handling
    op.execute("""
        DO $$ BEGIN
            CREATE TYPE assignmentstatus AS ENUM ('ASSIGNED', 'IN_PROGRESS', 'UNDER_REVIEW', 'COMPLETED', 'CLOSED');
        EXCEPTION
            WHEN duplicate_object THEN null;
        END $$;
    """)

    op.execute("""
        DO $$ BEGIN
            CREATE TYPE assignmentpriority AS ENUM ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'URGENT');
        EXCEPTION
            WHEN duplicate_object THEN null;
        END $$;
    """)
    
    # Convert status column: drop default, convert type, set new default
    op.execute("ALTER TABLE vulnerability_assignments ALTER COLUMN status DROP DEFAULT")
    op.execute("""
        ALTER TABLE vulnerability_assignments 
        ALTER COLUMN status TYPE assignmentstatus 
        USING CASE 
            WHEN status = 'assigned' THEN 'ASSIGNED'::assignmentstatus
            WHEN status = 'in_progress' THEN 'IN_PROGRESS'::assignmentstatus
            WHEN status = 'under_review' THEN 'UNDER_REVIEW'::assignmentstatus
            WHEN status = 'completed' THEN 'COMPLETED'::assignmentstatus
            WHEN status = 'closed' THEN 'CLOSED'::assignmentstatus
            ELSE 'ASSIGNED'::assignmentstatus
        END
    """)
    op.execute("ALTER TABLE vulnerability_assignments ALTER COLUMN status SET DEFAULT 'ASSIGNED'::assignmentstatus")
    
    # Convert priority column: drop default, convert type, set new default
    op.execute("ALTER TABLE vulnerability_assignments ALTER COLUMN priority DROP DEFAULT")
    op.execute("""
        ALTER TABLE vulnerability_assignments 
        ALTER COLUMN priority TYPE assignmentpriority 
        USING CASE 
            WHEN priority = 'low' THEN 'LOW'::assignmentpriority
            WHEN priority = 'medium' THEN 'MEDIUM'::assignmentpriority
            WHEN priority = 'high' THEN 'HIGH'::assignmentpriority
            WHEN priority = 'critical' THEN 'CRITICAL'::assignmentpriority
            WHEN priority = 'urgent' THEN 'URGENT'::assignmentpriority
            ELSE 'MEDIUM'::assignmentpriority
        END
    """)
    op.execute("ALTER TABLE vulnerability_assignments ALTER COLUMN priority SET DEFAULT 'MEDIUM'::assignmentpriority")
    
    op.drop_index('idx_assignments_status', table_name='vulnerability_assignments')
    op.create_index(op.f('ix_vulnerability_assignments_id'), 'vulnerability_assignments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vulnerability_assignments_id'), table_name='vulnerability_assignments')
    op.create_index('idx_assignments_status', 'vulnerability_assignments', ['status'], unique=False)
    
    # Convert back to VARCHAR with proper default handling
    op.execute("ALTER TABLE vulnerability_assignments ALTER COLUMN priority DROP DEFAULT")
    op.execute('ALTER TABLE vulnerability_assignments ALTER COLUMN priority TYPE VARCHAR(20)')
    op.execute("ALTER TABLE vulnerability_assignments ALTER COLUMN priority SET DEFAULT 'medium'")
    
    op.execute("ALTER TABLE vulnerability_assignments ALTER COLUMN status DROP DEFAULT")
    op.execute('ALTER TABLE vulnerability_assignments ALTER COLUMN status TYPE VARCHAR(20)')
    op.execute("ALTER TABLE vulnerability_assignments ALTER COLUMN status SET DEFAULT 'assigned'")
    
    # Drop enum types
    op.execute('DROP TYPE IF EXISTS assignmentpriority')
    op.execute('DROP TYPE IF EXISTS assignmentstatus')
    
    op.alter_column('vulnerability_assignments', 'cve_id',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.drop_index(op.f('ix_cves_id'), table_name='cves')
    op.drop_index(op.f('ix_cves_cve_id'), table_name='cves')
    op.create_unique_constraint('cves_cve_id_key', 'cves', ['cve_id'])
    op.drop_column('cves', 'upgrade_paths')
    op.drop_column('cves', 'detection_methods')
    op.drop_index(op.f('ix_assets_id'), table_name='assets')
    # ### end Alembic commands ###