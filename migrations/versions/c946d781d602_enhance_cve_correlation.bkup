"""enhance_cve_correlation

Revision ID: c946d781d602
Revises: 1e1d1e5c8df2
Create Date: 2025-08-22 02:50:02.882802

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c946d781d602'
down_revision: Union[str, None] = 'b21da46fe919'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_service_categories_id', table_name='service_categories')
    op.drop_table('service_categories')
    op.drop_index('ix_service_instances_id', table_name='service_instances')
    op.drop_table('service_instances')
    op.drop_index('idx_service_types_product_name', table_name='service_types')
    op.drop_index('ix_service_types_id', table_name='service_types')
    op.drop_table('service_types')
    op.add_column('cves', sa.Column('references', sa.JSON(), nullable=True))
    op.add_column('cves', sa.Column('weaknesses', sa.JSON(), nullable=True))
    op.add_column('cves', sa.Column('configurations', sa.JSON(), nullable=True))
    op.drop_index('idx_cves_correlation_confidence', table_name='cves')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('idx_cves_correlation_confidence', 'cves', ['correlation_confidence'], unique=False)
    op.drop_column('cves', 'configurations')
    op.drop_column('cves', 'weaknesses')
    op.drop_column('cves', 'references')
    op.create_table('service_types',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('service_types_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('vendor', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('default_ports', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('common_versions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('product_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('vendor_aliases', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('product_aliases', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['service_categories.id'], name='service_types_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='service_types_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_service_types_id', 'service_types', ['id'], unique=False)
    op.create_index('idx_service_types_product_name', 'service_types', ['product_name'], unique=False)
    op.create_table('service_instances',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('service_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('version', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('environment', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('criticality', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('hostname', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ip_addresses', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ports', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('owner_team', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('contact_email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_monitored', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('last_scan_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('tags', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['service_type_id'], ['service_types.id'], name='service_instances_service_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='service_instances_pkey')
    )
    op.create_index('ix_service_instances_id', 'service_instances', ['id'], unique=False)
    op.create_table('service_categories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('icon', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='service_categories_pkey'),
    sa.UniqueConstraint('name', name='service_categories_name_key')
    )
    op.create_index('ix_service_categories_id', 'service_categories', ['id'], unique=False)
    # ### end Alembic commands ###
